services:

  backend:
    build: ./backend/
    container_name: control-service-backend
    restart: always
    ports:
      - "${BACKEND_PORT}:8080"
    depends_on:
      - postgres
    environment:
      - IS_RELEASE=${IS_RELEASE}
      - RESEND_API_KEY=${RESEND_API_KEY}
      - CLIENT_URL=${CLIENT_URL}
      - TOKEN_MINUTE_LIFESPAN=${TOKEN_MINUTE_LIFESPAN}
      - REFRESH_TOKEN_HOUR_LIFESPAN=${REFRESH_TOKEN_HOUR_LIFESPAN}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
      - API_SECRET=${API_SECRET}
      - SUPERADMIN_PASSWORD=${SUPERADMIN_PASSWORD}
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DB_HOST}:${POSTGRES_PORT}/${DB_NAME}?sslmode=${DB_SSLMODE}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_PORT=${MINIO_PORT}
      - MINIO_CONSOLE_PORT=${MINIO_CONSOLE_PORT}
      - MINIO_SERVER_URL=${MINIO_SERVER_URL}

  client:
    build: 
      context: ./client/controlsystem
      args:
        REACT_APP_BACKEND_URL: ${REACT_APP_BACKEND_URL}
    container_name: control-service-client
    ports:
      - "${CLIENT_PORT}:80"

  postgres:
    image: postgres:17.4-alpine3.21
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d

volumes:
  postgres_data:
  minio_data:
