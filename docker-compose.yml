services:

  backend:
    build: ./backend/
    container_name: control-service-backend
    ports:
      - "${BACKEND_PORT}:8080"
    depends_on:
      - postgres
      - minio

  client:
    build: ./client/controlsystem
    container_name: control-service-client
    ports:
      - "${CLIENT_PORT}:80"

  postgres:
    image: postgres:17.4-alpine3.21
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d

  minio:
    image: minio/minio:RELEASE.2025-04-03T14-56-28Z
    container_name: minio
    command: server /data --console-address ":${MINIO_CONSOLE_PORT}"
    ports:
      - "${MINIO_PORT}:9000" 
      - "${MINIO_CONSOLE_PORT}:9001" 
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data

  hasura:
    image: hasura/graphql-engine:v2.48.4
    container_name: hasura
    ports:
      - "${HASURA_PORT}:8081"
    depends_on:
      - postgres
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_ADMIN_SECRET}
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log


volumes:
  postgres_data:
  minio_data: